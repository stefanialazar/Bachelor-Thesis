// <auto-generated />
using System;
using IvyLakes.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace IvyLakes.Migrations
{
    [DbContext(typeof(SeriesSyncContext))]
    partial class MerchShopContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:Collation", "SQL_Latin1_General_CP1_CI_AS")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.17")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("IvyLakes.Models.Comment", b =>
                {
                    b.Property<int>("CommentId")
                        .HasColumnType("int")
                        .HasColumnName("commentID");

                    b.Property<string>("CommentBody")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("commentBody");

                    b.Property<string>("CommentImageUrl")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("commentImageURL");

                    b.Property<int>("EpisodeNumber")
                        .HasColumnType("int")
                        .HasColumnName("episodeNumber");

                    b.Property<int?>("Score")
                        .HasColumnType("int")
                        .HasColumnName("score");

                    b.Property<int>("SeasonNumber")
                        .HasColumnType("int")
                        .HasColumnName("seasonNumber");

                    b.Property<int>("SeriesId")
                        .HasColumnType("int")
                        .HasColumnName("seriesID");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("userID");

                    b.HasKey("CommentId");

                    b.HasIndex("SeriesId");

                    b.HasIndex("UserId");

                    b.ToTable("Comments");
                });

            modelBuilder.Entity("IvyLakes.Models.CommentsReply", b =>
                {
                    b.Property<int>("ReplyId")
                        .HasColumnType("int")
                        .HasColumnName("replyID");

                    b.Property<string>("CommentBody")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("commentBody");

                    b.Property<int>("CommentId")
                        .HasColumnType("int")
                        .HasColumnName("commentID");

                    b.Property<string>("CommentImageUrl")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("commentImageURL");

                    b.Property<int?>("Score")
                        .HasColumnType("int")
                        .HasColumnName("score");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("userID");

                    b.HasKey("ReplyId")
                        .HasName("PK__Comments__36BBF6A8002479C4");

                    b.HasIndex("CommentId");

                    b.HasIndex("UserId");

                    b.ToTable("CommentsReplies");
                });

            modelBuilder.Entity("IvyLakes.Models.Image", b =>
                {
                    b.Property<int>("ImageId")
                        .HasColumnType("int")
                        .HasColumnName("imageID");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("imageURL");

                    b.Property<int>("SeriesId")
                        .HasColumnType("int")
                        .HasColumnName("seriesID");

                    b.HasKey("ImageId");

                    b.HasIndex("SeriesId");

                    b.ToTable("Images");
                });

            modelBuilder.Entity("IvyLakes.Models.SeriesSeason", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<int>("AiredEpisodes")
                        .HasColumnType("int")
                        .HasColumnName("airedEpisodes");

                    b.Property<int>("AiredSeason")
                        .HasColumnType("int")
                        .HasColumnName("airedSeason");

                    b.Property<int>("SeriesId")
                        .HasColumnType("int")
                        .HasColumnName("seriesId");

                    b.HasKey("Id");

                    b.HasIndex("SeriesId");

                    b.ToTable("SeriesSeasons");
                });

            modelBuilder.Entity("IvyLakes.Models.TvSeries", b =>
                {
                    b.Property<int>("SeriesId")
                        .HasColumnType("int")
                        .HasColumnName("seriesId");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(900)
                        .HasColumnType("nvarchar(900)")
                        .HasColumnName("description");

                    b.Property<string>("Genre")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("genre");

                    b.Property<string>("ImdbRating")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("imdbRating");

                    b.Property<string>("SeriesImageUrl")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("seriesImageURL");

                    b.Property<string>("SeriesTitle")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("seriesTitle");

                    b.Property<string>("StreamingPlatform")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("streamingPlatform");

                    b.Property<int>("YearReleased")
                        .HasColumnType("int")
                        .HasColumnName("yearReleased");

                    b.HasKey("SeriesId")
                        .HasName("PK_TvShows");

                    b.ToTable("TvSeries");
                });

            modelBuilder.Entity("IvyLakes.Models.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("BackgroundPicture")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Points")
                        .HasColumnType("int");

                    b.Property<string>("ProfilePicture")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("RegistrationDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("IvyLakes.Models.UserSeries", b =>
                {
                    b.Property<int>("SeriesId")
                        .HasColumnType("int");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("CurrentEpisode")
                        .HasColumnType("int");

                    b.Property<int?>("CurrentSeason")
                        .HasColumnType("int");

                    b.HasKey("SeriesId", "UserId");

                    b.HasIndex("UserId");

                    b.ToTable("UserSeries");
                });

            modelBuilder.Entity("IvyLakes.Models.Comment", b =>
                {
                    b.HasOne("IvyLakes.Models.TvSeries", "Series")
                        .WithMany("Comments")
                        .HasForeignKey("SeriesId")
                        .HasConstraintName("FK__Comment__seriesI__03F0984C")
                        .IsRequired();

                    b.HasOne("IvyLakes.Models.User", "User")
                        .WithMany("Comments")
                        .HasForeignKey("UserId")
                        .HasConstraintName("FK__Comment__userID__02FC7413")
                        .IsRequired();

                    b.Navigation("Series");

                    b.Navigation("User");
                });

            modelBuilder.Entity("IvyLakes.Models.CommentsReply", b =>
                {
                    b.HasOne("IvyLakes.Models.Comment", "Comment")
                        .WithMany("CommentsReplies")
                        .HasForeignKey("CommentId")
                        .HasConstraintName("FK__CommentsR__comme__1EA48E88")
                        .IsRequired();

                    b.HasOne("IvyLakes.Models.User", "User")
                        .WithMany("CommentsReplies")
                        .HasForeignKey("UserId")
                        .HasConstraintName("FK__CommentsR__userI__1DB06A4F")
                        .IsRequired();

                    b.Navigation("Comment");

                    b.Navigation("User");
                });

            modelBuilder.Entity("IvyLakes.Models.Image", b =>
                {
                    b.HasOne("IvyLakes.Models.TvSeries", "Series")
                        .WithMany("Images")
                        .HasForeignKey("SeriesId")
                        .HasConstraintName("FK__Images__seriesID__60A75C0F")
                        .IsRequired();

                    b.Navigation("Series");
                });

            modelBuilder.Entity("IvyLakes.Models.SeriesSeason", b =>
                {
                    b.HasOne("IvyLakes.Models.TvSeries", "Series")
                        .WithMany("SeriesSeasons")
                        .HasForeignKey("SeriesId")
                        .HasConstraintName("FK__SeriesSea__serie__72C60C4A")
                        .IsRequired();

                    b.Navigation("Series");
                });

            modelBuilder.Entity("IvyLakes.Models.UserSeries", b =>
                {
                    b.HasOne("IvyLakes.Models.TvSeries", "Series")
                        .WithMany("UserSeries")
                        .HasForeignKey("SeriesId")
                        .IsRequired();

                    b.HasOne("IvyLakes.Models.User", "User")
                        .WithMany("UserSeries")
                        .HasForeignKey("UserId")
                        .IsRequired();

                    b.Navigation("Series");

                    b.Navigation("User");
                });

            modelBuilder.Entity("IvyLakes.Models.Comment", b =>
                {
                    b.Navigation("CommentsReplies");
                });

            modelBuilder.Entity("IvyLakes.Models.TvSeries", b =>
                {
                    b.Navigation("Comments");

                    b.Navigation("Images");

                    b.Navigation("SeriesSeasons");

                    b.Navigation("UserSeries");
                });

            modelBuilder.Entity("IvyLakes.Models.User", b =>
                {
                    b.Navigation("Comments");

                    b.Navigation("CommentsReplies");

                    b.Navigation("UserSeries");
                });
#pragma warning restore 612, 618
        }
    }
}
